on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

env:
  REGION: europe-west1
  DOCKER_IMAGE: europe-west1-docker.pkg.dev/phenixel-infra/phenixel-repo/petitejerusalem:${{ inputs.tag }}
  PROJECT_ID: petite-jerusalem

jobs:
  upload-static:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up GCP credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

      - name: Upload static files to GCS
        run: |
          gcloud storage cp --recursive src/staticfiles/* gs://petite-jerusalem-django-assets/static

  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Google Cloud SDK
        uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: 'access_token'
          credentials_json: '${{ secrets.GCP_SA }}'

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: '${{ env.REGION }}-docker.pkg.dev'
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }},mode=max
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }},mode=max
          tags: ${{ env.DOCKER_IMAGE }}

  deploy-migrations:
    needs: [build-push]
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: 'access_token'
          credentials_json: '${{ secrets.GCP_SA }}'
  
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2


      - name: Deploy Cloud Run Job petite-jerusalem-django-migration
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          region: ${{ env.REGION }}
          job: 'petite-jerusalem-django-migration'
          image: ${{ env.DOCKER_IMAGE }}
          project_id: ${{ env.PROJECT_ID }}
  
      - name: Run Job petite-jerusalem-django-migration
        run: |
          gcloud run jobs execute petite-jerusalem-django-migration \
          --project=${{ env.PROJECT_ID }} \
          --region=${{ env.REGION }} \
          --wait

  deploy:
    needs: [deploy-migrations]
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: 'access_token'
          credentials_json: '${{ secrets.GCP_SA }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy Cloud Run Service petite-jerusalem-django-app
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          region: ${{ env.REGION }}
          service: 'petite-jerusalem-django-app'
          image: ${{ env.DOCKER_IMAGE }}
          project_id: ${{ env.PROJECT_ID }}
